function [optimized_params,optimized_cost] = ga_function(T,Model0,theta0,z)
% initial_guess = [Model0, theta0];


% Define lower and upper bounds for the parameters
lower_bound = [0,0,1/21*30,1/21*30,0];
upper_bound = [1,1,1/5*30,1/3*30,0.2];



% Set up the GA options
options = optimoptions('ga', ...
    'PopulationSize', 200, ...
    'MaxGenerations', 1000, ...
    'FunctionTolerance', 1e-9, ...
    'HybridFcn','patternsearch',...
    'MutationFcn','mutationadaptfeasible',...
    'NonlinearConstraintAlgorithm','penalty',...
    'Display', 'iter');

% 'EliteCount', 2, ...
    %     'CrossoverFraction', 0.8, ...
    %     'MutationFcn', {@mutationadaptfeasible, 0.05}, ...
% Run the GA optimization

[optimized_params,optimized_cost] = ga(@(p) sirCost(T, Model0, p, z), ...
    length(theta0), [], [], [], [], lower_bound, upper_bound, [], options);

end

